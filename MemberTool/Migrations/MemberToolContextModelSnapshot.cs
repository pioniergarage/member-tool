// <auto-generated />
using System;
using MemberTool.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MemberTool.Migrations
{
    [DbContext(typeof(MemberToolContext))]
    partial class MemberToolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MemberTool.Models.Entities.CurrentProject", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("CreatedAt");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PersonId");

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("MemberTool.Models.Entities.PGRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("CreatedAt");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PersonId");

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("MemberTool.Models.Entities.Person", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("CreatedAt");

                    b.Property<string>("CurrentPGRoleId");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email");

                    b.Property<string>("LinkedIn");

                    b.Property<string>("Location");

                    b.Property<DateTime>("MemberSince");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTimeOffset?>("UpdatedAt");

                    b.Property<string>("UserImgPath");

                    b.HasKey("Id");

                    b.HasIndex("CurrentPGRoleId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("MemberTool.Models.Entities.CurrentProject", b =>
                {
                    b.HasOne("MemberTool.Models.Entities.Person")
                        .WithMany("CurrentProjects")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("MemberTool.Models.Entities.PGRole", b =>
                {
                    b.HasOne("MemberTool.Models.Entities.Person")
                        .WithMany("PGRoles")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("MemberTool.Models.Entities.Person", b =>
                {
                    b.HasOne("MemberTool.Models.Entities.PGRole", "CurrentPGRole")
                        .WithMany()
                        .HasForeignKey("CurrentPGRoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
